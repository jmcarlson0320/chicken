pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--main
SUB_PIXEL = 8
DX_MAX_WALK = 20
DX_MAX_RUN = 36

function _init()
	box = create_test_box(80, 32)
end

function _update()
	update_box(box)
end

function _draw()
	cls()
	map()
	draw_box(box)
	--[[
	print("subx:      "..player.sub_x)
	print("x:         "..player.x)
	print("dx:        "..player.dx)
	print("target_dx: "..player.target_dx)
	print("suby:      "..player.sub_y)
	print("y:         "..player.y)
	print("dy:        "..player.dy)
	print("btn:       "..btn())
	print("state:     "..player.state)
	]]
end

function create_test_box(x, y)
	return {
		x = x,
		y = y,
		sub_x = 0,
		sub_y = 0,
		dx = 0,
		dy = 0,
	}
end

function move_x(obj, dx)
	obj.sub_x += obj.dx
	local move_x = obj.sub_x \ SUB_PIXEL
	if move_x ~= 0 then
		obj.sub_x -= move_x * SUB_PIXEL
		local sign = sgn(move_x)
		while move_x ~= 0 do
			if not collide_map(obj.x + sign, obj.y) then
				obj.x += sign
				move_x -= sign
			else
				obj.dx = 0
				obj.sub_x = 0
				break
			end
		end
	end
end

function move_y(obj)
	obj.sub_y += obj.dy
	local move_y = obj.sub_y \ SUB_PIXEL
	if move_y ~= 0 then
		obj.sub_y -= move_y * SUB_PIXEL
		local sign = sgn(move_y)
		while move_y ~= 0 do
			if not collide_map(obj.x, obj.y + sign) then
				obj.y += sign
				move_y -= sign
			else
				obj.dy = 0
				obj.sub_y = 0
				break
			end
		end
	end
end

function update_box(b)
	if btn(0) then b.dx -= 1 end
	if btn(1) then b.dx += 1 end
	if btn(2) then b.dy -= 1 end
	if btn(3) then b.dy += 1 end

	move_x(b)
	move_y(b)
end

function draw_box(b)
	print("sub_x "..b.sub_x)
	print("x     "..b.x)
	print("dx    "..b.dx)
	rect(b.x, b.y, b.x+7, b.y+7, 8)
end

function create_player(x, y)
	local p = {
		x = x,
		y = y,
		sub_x = x * SUB_PIXEL,
		sub_y = y * SUB_PIXEL,
		dx = 0,
		dy = 0,
		target_dx = 0,
		target_dy = 0,
		brakes_on = false,
		state = "idle",
		animations = {
			["idle"] = {
				frames = {50},
				rate = 0,
				t = 0,
			},
			["walk"] = {
				frames = {49, 50, 51, 50},
				rate = 4,
				t = 0,
			},
			["run"] = {
				frames = {49, 50, 51, 50},
				rate = 2,
				t = 0,
			},
		},
		facing = "right",
	}

	return p
end

function player_update(p)
	if p.state == "idle" then
		if btn(0) then
			p.target_dx = -DX_MAX_WALK
			p.facing = "left"
			p.state = "walk"
		end
		if btn(1) then
			p.target_dx = DX_MAX_WALK
			p.facing = "right"
			p.state = "walk"
		end
		if btn(4) then
			p.dy = -16
			p.airborne = true
		end
	elseif p.state == "walk" then
		-- left
		if btn(0) then
			p.target_dx = -DX_MAX_WALK
			p.facing = "left"
		end
		-- right
		if btn(1) then
			p.target_dx = DX_MAX_WALK
			p.facing = "right"
		end
		-- run left
		if btn(5) and btn(0) then
			p.target_dx = -DX_MAX_RUN
			p.state = "run"
		end
		-- run right
		if btn(5) and btn(1) then
			p.target_dx = DX_MAX_RUN
			p.state = "run"
		end
		-- coasting
		if btn() & 0x0F == 0 then
			p.target_dx = 0
		end
		-- not moving
		if (btn() & 0x0F == 0) and (p.dx == 0) then
			p.state = "idle"
		end
	elseif p.state == "run" then
		-- run left
		if btn(0) then
			p.target_dx = -DX_MAX_RUN
			p.facing = "left"
		end
		-- run right
		if btn(1) then
			p.target_dx = DX_MAX_RUN
			p.facing = "right"
		end
		-- released run or direction
		if (btn() & 0x0F == 0) or (not btn(5)) then
			p.state = "walk"
		end
	end

	-- X movement
	--	vel += acc
	--	pos += vel
	if p.target_dx - p.dx ~= 0 then
		local acc = sgn(p.target_dx - p.dx)
		if (p.target_dx > 0 and p.dx < 0) or (p.target_dx < 0 and p.dx > 0) then
			acc *= 2
		end
		p.dx += acc -- vel += acc
	end

	p.sub_x += p.dx -- pos += vel
	p.x = p.sub_x \ SUB_PIXEL

	p.sub_y += p.dy
	p.y = p.sub_y \ SUB_PIXEL

	if p.airborne then
	end

end

function player_draw(p)
	local anim = p.animations[p.state]
	local index = flr(anim.t / anim.rate % #anim.frames) + 1
	local sprite = anim.frames[index]
	local flip_x = p.facing == "left"
	spr(sprite, p.x, p.y, 1, 1, flip_x)
	anim.t += 1
end

function collide(a, b)
	if a[1] > b[3] then return false end
	if b[1] > a[3] then return false end
	if a[2] > b[4] then return false end
	if b[2] > a[4] then return false end
	return true
end

function collide_map(x, y)
	local a = {x, y, x+7, y+7}
	for map_x = 0, 15 do
		for map_y = 0, 15 do
			if fget(mget(map_x, map_y)) == 1 then
				local b = {map_x*8, map_y*8, map_x*8 + 7, map_y*8 + 7}
				if collide(a, b) then
					return true
				end
			end
		end
	end
	return false
end

--mouse
function mouse_init()
 poke(0x5f2d,1)
end

function mouse_pos()
	local x=stat(32)-1
	local y=stat(33)-1
	return x,y
end

function mouse_button()
 return stat(34)
end
__gfx__
00000000007777777777777777777700007777777777777777777700777777777777777777777777000000000000000000000000000000000000000000000000
00000000077777777777777777777770077777777777777777777770700000000000000000000007000000000000000000000000000000000000000000000000
00700700777777777777777777777777770000000000000000000077700000000000000000000007000000000000000000000000000000000000000000000000
00077000770000000000000000000077700000000000000000000007700000000000000000000007000000000000000000000000000000000000000000000000
00077000700000000000000000000007070000000000000000000070700000000000000000000007000000000000000000000000000000000000000000000000
00700700700000000000000000000007007777777777777777777700700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000700000000000000000000007000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000070000000000000000000070000000000000000000000000700000000000000000000007000000000000000000000000000000000000000000000000
00000000007777777777777777777700000000000000000000000000777777777777777777777777000000000000000000000000000000000000000000000000
00000000000008000008080000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000808000777777000080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777700700c07007777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000700c070070000700700c070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000070000700700007a07000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000700007a077777700700007a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777700007000007777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007070000007000000707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001010101010101010100000000000000000000000000010001000000000000000000000000000101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000708080809000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002700000019000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000017000029000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000027282900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
